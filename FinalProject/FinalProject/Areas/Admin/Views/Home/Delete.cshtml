@model DeleteViewModel

@{
    ViewData["Title"] = "Delete";

    // maintain the filtering/sorting from the route, so if the user clicks back it is not lost
    RouteDictionary current = Model.CurrentRoute;
    RouteDictionary routes = Model.CurrentRoute.Clone();
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Report</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ReportType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReportType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Date)
        </dt>
        <dd class="col-sm-10">
            @Model.Date.ToShortDateString()
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="ID" />
        <input type="submit" value="Delete" class="btn btn-outline-danger" />
    </form>
</div>

<div>
    <a asp-area="" asp-controller="Home" asp-action="Index" asp-all-route-data="@routes">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}